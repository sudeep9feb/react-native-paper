diff --git a/node_modules/component-docs/.DS_Store b/node_modules/component-docs/.DS_Store
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/component-docs/dist/css/src/templates/Documentation.css b/node_modules/component-docs/dist/css/src/templates/Documentation.css
index d6c5189..89f532a 100644
--- a/node_modules/component-docs/dist/css/src/templates/Documentation.css
+++ b/node_modules/component-docs/dist/css/src/templates/Documentation.css
@@ -1,6 +1,8 @@
 .Title_t1dytcq5{margin-top:0;}
 .MarkdownContent_m3ctz2y p:first-of-type{margin-top:0;}.MarkdownContent_m3ctz2y p:last-of-type{margin-bottom:0;}
 .PropInfo_p1eats2g{margin:14px 0;}
-.PropLabel_psi127e{display:block;color:inherit;font-size:18px;margin:24px 0 8px 0;-webkit-text-decoration:none;text-decoration:none;white-space:nowrap;}.PropLabel_psi127e:hover{color:inherit;}.PropLabel_psi127e > code{font-size:inherit;background-color:transparent;border:0;}
-.PropItem_pwdtv5j{margin:8px 0;}.PropItem_pwdtv5j > code{font-size:inherit;white-space:normal;}
-.RestPropsLabel_r5pwgte{display:block;margin:24px 0 8px 0;}
+.PropLabelWrapper_psi127e{-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;margin:24px 0 8px 0;}
+.PropLabel_pwdtv5j{display:block;color:inherit;font-size:18px;-webkit-text-decoration:none;text-decoration:none;white-space:nowrap;}.PropLabel_pwdtv5j:hover{color:inherit;}.PropLabel_pwdtv5j > code{font-size:inherit;background-color:transparent;border:0;}
+.PropItem_p5pwgte{margin:8px 0;}.PropItem_p5pwgte > code{font-size:inherit;white-space:normal;}
+.RestPropsLabel_rxjt4wc{display:block;margin:24px 0 8px 0;}
+.Badge_b9qtvtp{border-radius:15px;border-color:var(--b9qtvtp-0);background-color:var(--b9qtvtp-1);border-style:solid;border-width:1px;font-weight:600;text-align:center;padding:4px 8px;font-size:smaller;margin-left:8px;color:var(--b9qtvtp-0);}.dark-theme .Badge_b9qtvtp{color:white;}
diff --git a/node_modules/component-docs/dist/templates/App.js b/node_modules/component-docs/dist/templates/App.js
index 20fbbad..1957004 100644
--- a/node_modules/component-docs/dist/templates/App.js
+++ b/node_modules/component-docs/dist/templates/App.js
@@ -31,7 +31,7 @@ function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { va
 
 function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
 
-const buildRoutes = (data, github, logo) => {
+const buildRoutes = (data, github, logo, colors) => {
   const items = data.filter(item => item.type !== 'separator');
   return items.map(item => {
     let render;
@@ -64,7 +64,8 @@ const buildRoutes = (data, github, logo) => {
             info: info,
             github: github,
             logo: logo,
-            filepath: item.filepath
+            filepath: item.filepath,
+            colors: colors
           }));
         }
         break;
@@ -96,9 +97,10 @@ function App({
   data,
   github,
   logo,
-  title
+  title,
+  colors
 }) {
-  const routes = buildRoutes(data, github, logo);
+  const routes = buildRoutes(data, github, logo, colors);
   return React.createElement(_Router.default, {
     path: path,
     routes: routes,
diff --git a/node_modules/component-docs/dist/templates/App.js.map b/node_modules/component-docs/dist/templates/App.js.map
index 58924d0..c5ac76c 100644
--- a/node_modules/component-docs/dist/templates/App.js.map
+++ b/node_modules/component-docs/dist/templates/App.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../src/templates/App.js"],"names":["buildRoutes","data","github","logo","items","filter","item","type","map","render","source","props","path","info","title","filepath","CustomComponent","Error","App","routes"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAKA,MAAMA,WAAW,GAAG,CAClBC,IADkB,EAElBC,MAFkB,EAGlBC,IAHkB,KAID;AACjB,QAAMC,KAAY,GAAGH,IAAI,CAACI,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,WAAlC,CAArB;AAEA,SAAOH,KAAK,CAACI,GAAN,CAAWF,IAAD,IAAoB;AACnC,QAAIG,MAAJ;;AAEA,YAAQH,IAAI,CAACC,IAAb;AACE,WAAK,IAAL;AACE;AACE,gBAAMG,MAAM,GAAGJ,IAAI,CAACL,IAApB;;AACAQ,UAAAA,MAAM,GAAIE,KAAD,IACP,oBAAC,eAAD,QACE,oBAAC,gBAAD;AAAS,YAAA,IAAI,EAAEA,KAAK,CAACC,IAArB;AAA2B,YAAA,IAAI,EAAEX;AAAjC,YADF,EAEE,oBAAC,gBAAD;AAAS,YAAA,IAAI,EAAEE;AAAf,aACE,oBAAC,iBAAD;AAAU,YAAA,MAAM,EAAEO;AAAlB,YADF,CAFF,CADF;AAQD;AACD;;AACF,WAAK,WAAL;AACE;AACE,gBAAMG,IAAI,GAAGP,IAAI,CAACL,IAAlB;;AACAQ,UAAAA,MAAM,GAAIE,KAAD,IACP,oBAAC,eAAD,QACE,oBAAC,gBAAD;AAAS,YAAA,IAAI,EAAEA,KAAK,CAACC,IAArB;AAA2B,YAAA,IAAI,EAAEX;AAAjC,YADF,EAEE,oBAAC,sBAAD;AACE,YAAA,IAAI,EAAEK,IAAI,CAACQ,KADb;AAEE,YAAA,IAAI,EAAED,IAFR;AAGE,YAAA,MAAM,EAAEX,MAHV;AAIE,YAAA,IAAI,EAAEC,IAJR;AAKE,YAAA,QAAQ,EAAEG,IAAI,CAACS;AALjB,YAFF,CADF;AAYD;AACD;;AACF,WAAK,QAAL;AACE;AACE,gBAAMC,eAAe,GAAGV,IAAI,CAACL,IAA7B;;AACAQ,UAAAA,MAAM,GAAIE,KAAD,IACP,oBAAC,eAAD,QACE,oBAAC,gBAAD;AAAS,YAAA,IAAI,EAAEA,KAAK,CAACC,IAArB;AAA2B,YAAA,IAAI,EAAEX;AAAjC,YADF,EAEE,oBAAC,eAAD,OAFF,CADF;AAMD;AACD;;AACF;AACE,cAAM,IAAIgB,KAAJ,CAAW,gBAAeX,IAAI,CAACC,IAAK,EAApC,CAAN;AA3CJ;;AA8CA,6BACKD,IADL;AAEE;AACAG,MAAAA;AAHF;AAKD,GAtDM,CAAP;AAuDD,CA9DD;;AAwEe,SAASS,GAAT,CAAa;AAAEN,EAAAA,IAAF;AAAQX,EAAAA,IAAR;AAAcC,EAAAA,MAAd;AAAsBC,EAAAA,IAAtB;AAA4BW,EAAAA;AAA5B,CAAb,EAAyD;AACtE,QAAMK,MAAM,GAAGnB,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAeC,IAAf,CAA1B;AACA,SAAO,oBAAC,eAAD;AAAQ,IAAA,IAAI,EAAES,IAAd;AAAoB,IAAA,MAAM,EAAEO,MAA5B;AAAoC,IAAA,KAAK,EAAEL;AAA3C,IAAP;AACD","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport Router from './Router';\nimport Documentation from './Documentation';\nimport Markdown from './Markdown';\nimport Layout from './Layout';\nimport Sidebar from './Sidebar';\nimport Content from './Content';\nimport type { Metadata, Route, Separator } from '../types';\n\ntype Data = Array<Metadata | Separator>;\n\nconst buildRoutes = (\n  data: Data,\n  github?: string,\n  logo?: string\n): Array<Route> => {\n  const items: any[] = data.filter(item => item.type !== 'separator');\n\n  return items.map((item: Metadata) => {\n    let render;\n\n    switch (item.type) {\n      case 'md':\n        {\n          const source = item.data;\n          render = (props: { path: string }) => (\n            <Layout>\n              <Sidebar path={props.path} data={data} />\n              <Content logo={logo}>\n                <Markdown source={source} />\n              </Content>\n            </Layout>\n          );\n        }\n        break;\n      case 'component':\n        {\n          const info = item.data;\n          render = (props: { path: string }) => (\n            <Layout>\n              <Sidebar path={props.path} data={data} />\n              <Documentation\n                name={item.title}\n                info={info}\n                github={github}\n                logo={logo}\n                filepath={item.filepath}\n              />\n            </Layout>\n          );\n        }\n        break;\n      case 'custom':\n        {\n          const CustomComponent = item.data;\n          render = (props: { path: string }) => (\n            <Layout>\n              <Sidebar path={props.path} data={data} />\n              <CustomComponent />\n            </Layout>\n          );\n        }\n        break;\n      default:\n        throw new Error(`Unknown type ${item.type}`);\n    }\n\n    return {\n      ...item,\n      /* $FlowFixMe */\n      render,\n    };\n  });\n};\n\ntype Props = {\n  path: string,\n  data: Data,\n  github?: string,\n  logo?: string,\n  title?: string,\n};\n\nexport default function App({ path, data, github, logo, title }: Props) {\n  const routes = buildRoutes(data, github, logo);\n  return <Router path={path} routes={routes} title={title} />;\n}\n"],"file":"App.js"}
\ No newline at end of file
+{"version":3,"sources":["../../src/templates/App.js"],"names":["buildRoutes","data","github","logo","colors","items","filter","item","type","map","render","source","props","path","info","title","filepath","CustomComponent","Error","App","routes"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;AAKA,MAAMA,WAAW,GAAG,CAClBC,IADkB,EAElBC,MAFkB,EAGlBC,IAHkB,EAIlBC,MAJkB,KAQD;AACjB,QAAMC,KAAY,GAAGJ,IAAI,CAACK,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,WAAlC,CAArB;AAEA,SAAOH,KAAK,CAACI,GAAN,CAAWF,IAAD,IAAoB;AACnC,QAAIG,MAAJ;;AAEA,YAAQH,IAAI,CAACC,IAAb;AACE,WAAK,IAAL;AACE;AACE,gBAAMG,MAAM,GAAGJ,IAAI,CAACN,IAApB;;AACAS,UAAAA,MAAM,GAAIE,KAAD,IACP,oBAAC,eAAD,QACE,oBAAC,gBAAD;AAAS,YAAA,IAAI,EAAEA,KAAK,CAACC,IAArB;AAA2B,YAAA,IAAI,EAAEZ;AAAjC,YADF,EAEE,oBAAC,gBAAD;AAAS,YAAA,IAAI,EAAEE;AAAf,aACE,oBAAC,iBAAD;AAAU,YAAA,MAAM,EAAEQ;AAAlB,YADF,CAFF,CADF;AAQD;AACD;;AACF,WAAK,WAAL;AACE;AACE,gBAAMG,IAAI,GAAGP,IAAI,CAACN,IAAlB;;AACAS,UAAAA,MAAM,GAAIE,KAAD,IACP,oBAAC,eAAD,QACE,oBAAC,gBAAD;AAAS,YAAA,IAAI,EAAEA,KAAK,CAACC,IAArB;AAA2B,YAAA,IAAI,EAAEZ;AAAjC,YADF,EAEE,oBAAC,sBAAD;AACE,YAAA,IAAI,EAAEM,IAAI,CAACQ,KADb;AAEE,YAAA,IAAI,EAAED,IAFR;AAGE,YAAA,MAAM,EAAEZ,MAHV;AAIE,YAAA,IAAI,EAAEC,IAJR;AAKE,YAAA,QAAQ,EAAEI,IAAI,CAACS,QALjB;AAME,YAAA,MAAM,EAAEZ;AANV,YAFF,CADF;AAaD;AACD;;AACF,WAAK,QAAL;AACE;AACE,gBAAMa,eAAe,GAAGV,IAAI,CAACN,IAA7B;;AACAS,UAAAA,MAAM,GAAIE,KAAD,IACP,oBAAC,eAAD,QACE,oBAAC,gBAAD;AAAS,YAAA,IAAI,EAAEA,KAAK,CAACC,IAArB;AAA2B,YAAA,IAAI,EAAEZ;AAAjC,YADF,EAEE,oBAAC,eAAD,OAFF,CADF;AAMD;AACD;;AACF;AACE,cAAM,IAAIiB,KAAJ,CAAW,gBAAeX,IAAI,CAACC,IAAK,EAApC,CAAN;AA5CJ;;AA+CA,6BACKD,IADL;AAEE;AACAG,MAAAA;AAHF;AAKD,GAvDM,CAAP;AAwDD,CAnED;;AAiFe,SAASS,GAAT,CAAa;AAC1BN,EAAAA,IAD0B;AAE1BZ,EAAAA,IAF0B;AAG1BC,EAAAA,MAH0B;AAI1BC,EAAAA,IAJ0B;AAK1BY,EAAAA,KAL0B;AAM1BX,EAAAA;AAN0B,CAAb,EAOL;AACR,QAAMgB,MAAM,GAAGpB,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAeC,IAAf,EAAqBC,MAArB,CAA1B;AACA,SAAO,oBAAC,eAAD;AAAQ,IAAA,IAAI,EAAES,IAAd;AAAoB,IAAA,MAAM,EAAEO,MAA5B;AAAoC,IAAA,KAAK,EAAEL;AAA3C,IAAP;AACD","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport Router from './Router';\nimport Documentation from './Documentation';\nimport Markdown from './Markdown';\nimport Layout from './Layout';\nimport Sidebar from './Sidebar';\nimport Content from './Content';\nimport type { Metadata, Route, Separator } from '../types';\n\ntype Data = Array<Metadata | Separator>;\n\nconst buildRoutes = (\n  data: Data,\n  github?: string,\n  logo?: string,\n  colors?: {\n    primary?: string,\n    annotations?: { [key: string]: string },\n  }\n): Array<Route> => {\n  const items: any[] = data.filter(item => item.type !== 'separator');\n\n  return items.map((item: Metadata) => {\n    let render;\n\n    switch (item.type) {\n      case 'md':\n        {\n          const source = item.data;\n          render = (props: { path: string }) => (\n            <Layout>\n              <Sidebar path={props.path} data={data} />\n              <Content logo={logo}>\n                <Markdown source={source} />\n              </Content>\n            </Layout>\n          );\n        }\n        break;\n      case 'component':\n        {\n          const info = item.data;\n          render = (props: { path: string }) => (\n            <Layout>\n              <Sidebar path={props.path} data={data} />\n              <Documentation\n                name={item.title}\n                info={info}\n                github={github}\n                logo={logo}\n                filepath={item.filepath}\n                colors={colors}\n              />\n            </Layout>\n          );\n        }\n        break;\n      case 'custom':\n        {\n          const CustomComponent = item.data;\n          render = (props: { path: string }) => (\n            <Layout>\n              <Sidebar path={props.path} data={data} />\n              <CustomComponent />\n            </Layout>\n          );\n        }\n        break;\n      default:\n        throw new Error(`Unknown type ${item.type}`);\n    }\n\n    return {\n      ...item,\n      /* $FlowFixMe */\n      render,\n    };\n  });\n};\n\ntype Props = {\n  path: string,\n  data: Data,\n  github?: string,\n  logo?: string,\n  title?: string,\n  colors?: {\n    primary?: string,\n    annotations?: { [key: string]: string },\n  },\n};\n\nexport default function App({\n  path,\n  data,\n  github,\n  logo,\n  title,\n  colors,\n}: Props) {\n  const routes = buildRoutes(data, github, logo, colors);\n  return <Router path={path} routes={routes} title={title} />;\n}\n"],"file":"App.js"}
\ No newline at end of file
diff --git a/node_modules/component-docs/dist/templates/Documentation.js b/node_modules/component-docs/dist/templates/Documentation.js
index 1984fb3..109fda1 100644
--- a/node_modules/component-docs/dist/templates/Documentation.js
+++ b/node_modules/component-docs/dist/templates/Documentation.js
@@ -9,6 +9,8 @@ var React = _interopRequireWildcard(require("react"));
 
 var _react2 = require("linaria/react");
 
+var _color = _interopRequireDefault(require("color"));
+
 var _Content = _interopRequireDefault(require("./Content"));
 
 var _Markdown = _interopRequireDefault(require("./Markdown"));
@@ -47,28 +49,45 @@ const PropInfo =
   name: "PropInfo",
   class: "PropInfo_p1eats2g"
 });
+const PropLabelWrapper =
+/*#__PURE__*/
+(0, _react2.styled)("div")({
+  name: "PropLabelWrapper",
+  class: "PropLabelWrapper_psi127e"
+});
 const PropLabel =
 /*#__PURE__*/
 (0, _react2.styled)("a")({
   name: "PropLabel",
-  class: "PropLabel_psi127e"
+  class: "PropLabel_pwdtv5j"
 });
 const PropItem =
 /*#__PURE__*/
 (0, _react2.styled)("div")({
   name: "PropItem",
-  class: "PropItem_pwdtv5j"
+  class: "PropItem_p5pwgte"
 });
 const RestPropsLabel =
 /*#__PURE__*/
 (0, _react2.styled)("a")({
   name: "RestPropsLabel",
-  class: "RestPropsLabel_r5pwgte"
+  class: "RestPropsLabel_rxjt4wc"
+});
+const Badge =
+/*#__PURE__*/
+(0, _react2.styled)("div")({
+  name: "Badge",
+  class: "Badge_b9qtvtp",
+  vars: {
+    "b9qtvtp-0": [props => props.color],
+    "b9qtvtp-1": [props => (0, _color.default)(props.color).alpha(0.2).rgb().string()]
+  }
 });
 const REACT_STATIC_METHODS = ['getDerivedStateFromProps'];
 const ANNOTATION_OPTIONAL = '@optional';
 const ANNOTATION_INTERNAL = '@internal';
 const ANNOTATION_EXTENDS = '@extends';
+const ANNOTATION_BADGES = ['@label', '@deprecated'];
 
 const getTypeName = type => type.raw || type.name || '';
 
@@ -84,17 +103,25 @@ const PropTypeDoc = ({
   tsType,
   type,
   required,
-  defaultValue
+  defaultValue,
+  colors
 }) => {
   const isRequired = required && defaultValue == null && !description.startsWith(ANNOTATION_OPTIONAL);
   const typeName = // eslint-disable-next-line no-nested-ternary
   flowType ? getTypeName(flowType) : tsType ? getTypeName(tsType) : type ? getTypeName(type) : null;
-  return React.createElement(PropInfo, null, React.createElement(PropLabel, {
+  const badge = description && ANNOTATION_BADGES.find(i => i == description.split(' ')[0]);
+  const containsBadge = description && badge && description.startsWith(badge);
+  const badgeLine = containsBadge ? description.split('\n')[0] : null;
+  const badgeColor = badge && colors && colors.annotations && colors.annotations[badge.replace('@', '')];
+  const badgeDescription = containsBadge && badgeLine ? badgeLine.replace(badge || '', '').trim() : null;
+  return React.createElement(PropInfo, null, React.createElement(PropLabelWrapper, null, React.createElement(PropLabel, {
     name: name,
     href: `#${name}`
-  }, React.createElement("code", null, name), isRequired ? ' (required)' : ''), typeName && typeName !== 'unknown' ? React.createElement(PropItem, null, React.createElement("span", null, "Type: "), React.createElement("code", null, typeName)) : null, defaultValue ? React.createElement(PropItem, null, React.createElement("span", null, "Default value: "), React.createElement("code", null, defaultValue.value)) : null, description ? React.createElement(PropItem, {
+  }, React.createElement("code", null, name), isRequired ? ' (required)' : ''), badge && React.createElement(Badge, {
+    color: badgeColor
+  }, badgeDescription)), typeName && typeName !== 'unknown' ? React.createElement(PropItem, null, React.createElement("span", null, "Type: "), React.createElement("code", null, typeName)) : null, defaultValue ? React.createElement(PropItem, null, React.createElement("span", null, "Default value: "), React.createElement("code", null, defaultValue.value)) : null, description ? React.createElement(PropItem, {
     as: MarkdownContent,
-    source: description.replace(/^@optional/, '').trim()
+    source: description.replace(/^@optional/, '').replace(badgeLine || '', '').trim()
   }) : null);
 };
 
@@ -139,7 +166,8 @@ function Documentation({
   info,
   logo,
   github,
-  filepath
+  filepath,
+  colors
 }) {
   const restProps = [];
   const description = info.description.split('\n').filter(line => {
@@ -178,7 +206,8 @@ function Documentation({
     }
   }), keys.length || restProps.length ? React.createElement(React.Fragment, null, React.createElement("h2", null, "Props"), keys.map(prop => React.createElement(PropTypeDoc, _extends({
     key: prop,
-    name: prop
+    name: prop,
+    colors: colors
   }, props[prop]))), restProps.map(prop => React.createElement(RestPropsLabel, {
     key: prop.name,
     href: prop.link
diff --git a/node_modules/component-docs/dist/templates/Documentation.js.map b/node_modules/component-docs/dist/templates/Documentation.js.map
index 28dd6e1..ba44f69 100644
--- a/node_modules/component-docs/dist/templates/Documentation.js.map
+++ b/node_modules/component-docs/dist/templates/Documentation.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../src/templates/Documentation.js"],"names":["Title","MarkdownContent","Markdown","PropInfo","PropLabel","PropItem","RestPropsLabel","REACT_STATIC_METHODS","ANNOTATION_OPTIONAL","ANNOTATION_INTERNAL","ANNOTATION_EXTENDS","getTypeName","type","raw","name","hasAnnotation","item","annotation","description","startsWith","docblock","pascalToCamelCase","text","replace","$1","toLowerCase","PropTypeDoc","flowType","tsType","required","defaultValue","isRequired","typeName","value","trim","MethodDoc","params","returns","length","map","p","join","PropertyDoc","link","Documentation","info","logo","github","filepath","restProps","split","filter","line","parts","slice","pop","push","props","keys","Object","prop","methods","method","modifiers","includes","statics","concat","linkify","s"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { styled } from 'linaria/react';\nimport Content from './Content';\nimport Markdown from './Markdown';\nimport EditButton from './EditButton';\nimport type { TypeAnnotation, Docs } from '../types';\n\ntype Props = {\n  name: string,\n  info: Docs,\n  filepath: string,\n  logo?: string,\n  github?: string,\n};\n\nconst Title = styled.h1`\n  margin-top: 0;\n`;\n\nconst MarkdownContent = styled(Markdown)`\n  p:first-of-type {\n    margin-top: 0;\n  }\n\n  p:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nconst PropInfo = styled.div`\n  margin: 14px 0;\n`;\n\nconst PropLabel = styled.a`\n  display: block;\n  color: inherit;\n  font-size: 18px;\n  margin: 24px 0 8px 0;\n  text-decoration: none;\n  white-space: nowrap;\n\n  &:hover {\n    color: inherit;\n  }\n\n  & > code {\n    font-size: inherit;\n    background-color: transparent;\n    border: 0;\n  }\n`;\n\nconst PropItem = styled.div`\n  margin: 8px 0;\n\n  & > code {\n    font-size: inherit;\n    white-space: normal;\n  }\n`;\n\nconst RestPropsLabel = styled.a`\n  display: block;\n  margin: 24px 0 8px 0;\n`;\n\nconst REACT_STATIC_METHODS = ['getDerivedStateFromProps'];\n\nconst ANNOTATION_OPTIONAL = '@optional';\nconst ANNOTATION_INTERNAL = '@internal';\nconst ANNOTATION_EXTENDS = '@extends';\n\nconst getTypeName = (type: TypeAnnotation) => type.raw || type.name || '';\n\nconst hasAnnotation = (item: any, annotation: string) =>\n  // eslint-disable-next-line no-nested-ternary\n  item.description\n    ? item.description.startsWith(annotation)\n    : item.docblock\n    ? item.docblock.startsWith(annotation)\n    : false;\n\nconst pascalToCamelCase = (text: string) =>\n  text.replace(/^[A-Z]+/g, $1 => $1.toLowerCase());\n\nconst PropTypeDoc = ({\n  name,\n  description,\n  flowType,\n  tsType,\n  type,\n  required,\n  defaultValue,\n}: *) => {\n  const isRequired =\n    required &&\n    defaultValue == null &&\n    !description.startsWith(ANNOTATION_OPTIONAL);\n\n  const typeName =\n    // eslint-disable-next-line no-nested-ternary\n    flowType\n      ? getTypeName(flowType)\n      : tsType\n      ? getTypeName(tsType)\n      : type\n      ? getTypeName(type)\n      : null;\n\n  return (\n    <PropInfo>\n      <PropLabel name={name} href={`#${name}`}>\n        <code>{name}</code>\n        {isRequired ? ' (required)' : ''}\n      </PropLabel>\n      {typeName && typeName !== 'unknown' ? (\n        <PropItem>\n          <span>Type: </span>\n          <code>{typeName}</code>\n        </PropItem>\n      ) : null}\n      {defaultValue ? (\n        <PropItem>\n          <span>Default value: </span>\n          <code>{defaultValue.value}</code>\n        </PropItem>\n      ) : null}\n      {description ? (\n        <PropItem\n          as={MarkdownContent}\n          source={description.replace(/^@optional/, '').trim()}\n        />\n      ) : null}\n    </PropInfo>\n  );\n};\n\nconst MethodDoc = ({ name, description, type, params, returns }) => {\n  const typeName = type ? getTypeName(type) : null;\n\n  return (\n    <PropInfo key={name}>\n      <PropLabel name={name} href={`#${name}`}>\n        <code>{name}</code>\n      </PropLabel>\n\n      {typeName && typeName !== 'unknown' ? (\n        <PropItem>\n          <span>Type: </span>\n          <code>{typeName}</code>\n        </PropItem>\n      ) : null}\n      {params.length ? (\n        <PropItem>\n          <span>Params: </span>\n          <code>\n            {params\n              .map(p => `${p.name}${p.type ? `: ${getTypeName(p.type)}` : ''}`)\n              .join(', ')}\n          </code>\n        </PropItem>\n      ) : null}\n      {returns && returns.type ? (\n        <PropItem>\n          <span>Returns: </span>\n          <code>{getTypeName(returns.type)}</code>\n        </PropItem>\n      ) : null}\n      {description ? (\n        <PropItem as={MarkdownContent} source={description.trim()} />\n      ) : null}\n    </PropInfo>\n  );\n};\n\nconst PropertyDoc = ({ name, description, type, value, link }: *) => {\n  const typeName = type ? getTypeName(type) : null;\n\n  return (\n    <PropInfo>\n      <PropLabel\n        name={name}\n        href={`${typeName === 'static' && link ? `${link}` : `#${name}`}`}\n      >\n        <code>{name}</code>\n      </PropLabel>\n      {typeName && typeName !== 'unknown' ? (\n        <PropItem>\n          <span>Type: </span>\n          <code>{typeName}</code>\n        </PropItem>\n      ) : null}\n      {typeof value === 'string' || typeof value === 'number' ? (\n        <PropItem>\n          <span>Value: </span>\n          <code>{value}</code>\n        </PropItem>\n      ) : null}\n      {description ? (\n        <PropItem\n          as={MarkdownContent}\n          source={description.replace(/^@optional/, '').trim()}\n        />\n      ) : null}\n    </PropInfo>\n  );\n};\n\nexport default function Documentation({\n  name,\n  info,\n  logo,\n  github,\n  filepath,\n}: Props) {\n  const restProps = [];\n  const description = info.description\n    .split('\\n')\n    .filter(line => {\n      if (line.startsWith(ANNOTATION_EXTENDS)) {\n        const parts = line.split(' ').slice(1);\n        const link = parts.pop();\n        restProps.push({\n          name: parts.join(' '),\n          link,\n        });\n        return false;\n      }\n      return true;\n    })\n    .join('\\n');\n\n  const props = info.props || {};\n\n  const keys = Object.keys(props).filter(\n    prop => !hasAnnotation(props[prop], ANNOTATION_INTERNAL)\n  );\n  const methods = info.methods.filter(\n    method =>\n      !(\n        method.name.startsWith('_') ||\n        method.modifiers.includes('static') ||\n        method.docblock == null ||\n        hasAnnotation(method, ANNOTATION_INTERNAL)\n      )\n  );\n  const statics = info.statics\n    .map(prop => ({\n      type: 'property',\n      info: prop,\n    }))\n    .concat(\n      info.methods\n        .filter(\n          method =>\n            method.modifiers.includes('static') &&\n            method.docblock != null &&\n            !REACT_STATIC_METHODS.includes(method.name)\n        )\n        .map(method => ({\n          type: 'method',\n          info: {\n            ...method,\n            type: { raw: 'Function' },\n          },\n        }))\n    )\n    .filter(\n      item =>\n        !(\n          item.info.name.startsWith('_') ||\n          hasAnnotation(item.info, ANNOTATION_INTERNAL)\n        )\n    );\n\n  return (\n    <Content logo={logo}>\n      <Title>{name}</Title>\n      <MarkdownContent source={description} options={{ linkify: true }} />\n      {keys.length || restProps.length ? (\n        <React.Fragment>\n          <h2>Props</h2>\n          {keys.map(prop => (\n            <PropTypeDoc key={prop} name={prop} {...props[prop]} />\n          ))}\n          {restProps.map(prop => (\n            <RestPropsLabel key={prop.name} href={prop.link}>\n              <code>\n                ...\n                {prop.name}\n              </code>\n            </RestPropsLabel>\n          ))}\n        </React.Fragment>\n      ) : null}\n      {methods.length ? (\n        <React.Fragment>\n          <h2>Methods</h2>\n          <p>\n            These methods can be accessed on the <code>ref</code> of the\n            component, e.g.{' '}\n            <code>\n              {pascalToCamelCase(name)}\n              Ref.\n              {methods[0].name}\n              (...args)\n            </code>\n            .\n          </p>\n          {methods.map(method => (\n            <MethodDoc key={method.name} type={null} {...method} />\n          ))}\n        </React.Fragment>\n      ) : null}\n      {statics.length ? (\n        <React.Fragment>\n          <h2>Static properties</h2>\n          <p>\n            These properties can be accessed on <code>{name}</code> by using the\n            dot notation, e.g.{' '}\n            <code>\n              {name}.{statics[0].info.name}\n            </code>\n            .\n          </p>\n          {statics.map(s => {\n            if (s.type === 'method') {\n              return <MethodDoc key={s.info.name} {...s.info} />;\n            }\n\n            return <PropertyDoc key={s.info.name} {...s.info} />;\n          })}\n        </React.Fragment>\n      ) : null}\n      <EditButton github={github} filepath={filepath} />\n    </Content>\n  );\n}\n"],"file":"Documentation.js"}
\ No newline at end of file
+{"version":3,"sources":["../../src/templates/Documentation.js"],"names":["Title","MarkdownContent","Markdown","PropInfo","PropLabelWrapper","PropLabel","PropItem","RestPropsLabel","Badge","props","color","alpha","rgb","string","REACT_STATIC_METHODS","ANNOTATION_OPTIONAL","ANNOTATION_INTERNAL","ANNOTATION_EXTENDS","ANNOTATION_BADGES","getTypeName","type","raw","name","hasAnnotation","item","annotation","description","startsWith","docblock","pascalToCamelCase","text","replace","$1","toLowerCase","PropTypeDoc","flowType","tsType","required","defaultValue","colors","isRequired","typeName","badge","find","i","split","containsBadge","badgeLine","badgeColor","annotations","badgeDescription","trim","value","MethodDoc","params","returns","length","map","p","join","PropertyDoc","link","Documentation","info","logo","github","filepath","restProps","filter","line","parts","slice","pop","push","keys","Object","prop","methods","method","modifiers","includes","statics","concat","linkify","s"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { styled } from 'linaria/react';\nimport color from 'color';\nimport type { TypeAnnotation, Docs } from '../types';\nimport Content from './Content';\nimport Markdown from './Markdown';\nimport EditButton from './EditButton';\n\ntype Props = {\n  name: string,\n  info: Docs,\n  filepath: string,\n  logo?: string,\n  github?: string,\n  colors?: {\n    primary?: string,\n    annotations?: { [key: string]: string },\n  },\n};\n\nconst Title = styled.h1`\n  margin-top: 0;\n`;\n\nconst MarkdownContent = styled(Markdown)`\n  p:first-of-type {\n    margin-top: 0;\n  }\n\n  p:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nconst PropInfo = styled.div`\n  margin: 14px 0;\n`;\n\nconst PropLabelWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  margin: 24px 0 8px 0;\n`;\n\nconst PropLabel = styled.a`\n  display: block;\n  color: inherit;\n  font-size: 18px;\n  text-decoration: none;\n  white-space: nowrap;\n\n  &:hover {\n    color: inherit;\n  }\n\n  & > code {\n    font-size: inherit;\n    background-color: transparent;\n    border: 0;\n  }\n`;\n\nconst PropItem = styled.div`\n  margin: 8px 0;\n\n  & > code {\n    font-size: inherit;\n    white-space: normal;\n  }\n`;\n\nconst RestPropsLabel = styled.a`\n  display: block;\n  margin: 24px 0 8px 0;\n`;\n\nconst Badge = styled.div`\n  border-radius: 15px;\n  border-color: ${props => props.color};\n  background-color: ${props =>\n    color(props.color)\n      .alpha(0.2)\n      .rgb()\n      .string()};\n  border-style: solid;\n  border-width: 1px;\n  font-weight: 600;\n  text-align: center;\n  padding: 4px 8px;\n  font-size: smaller;\n  margin-left: 8px;\n  color: ${props => props.color};\n\n  .dark-theme & {\n    color: white;\n  }\n`;\n\nconst REACT_STATIC_METHODS = ['getDerivedStateFromProps'];\n\nconst ANNOTATION_OPTIONAL = '@optional';\nconst ANNOTATION_INTERNAL = '@internal';\nconst ANNOTATION_EXTENDS = '@extends';\nconst ANNOTATION_BADGES = ['@label', '@deprecated'];\n\nconst getTypeName = (type: TypeAnnotation) => type.raw || type.name || '';\n\nconst hasAnnotation = (item: any, annotation: string) =>\n  // eslint-disable-next-line no-nested-ternary\n  item.description\n    ? item.description.startsWith(annotation)\n    : item.docblock\n    ? item.docblock.startsWith(annotation)\n    : false;\n\nconst pascalToCamelCase = (text: string) =>\n  text.replace(/^[A-Z]+/g, $1 => $1.toLowerCase());\n\nconst PropTypeDoc = ({\n  name,\n  description,\n  flowType,\n  tsType,\n  type,\n  required,\n  defaultValue,\n  colors,\n}: *) => {\n  const isRequired =\n    required &&\n    defaultValue == null &&\n    !description.startsWith(ANNOTATION_OPTIONAL);\n\n  const typeName =\n    // eslint-disable-next-line no-nested-ternary\n    flowType\n      ? getTypeName(flowType)\n      : tsType\n      ? getTypeName(tsType)\n      : type\n      ? getTypeName(type)\n      : null;\n\n  const badge =\n    description && ANNOTATION_BADGES.find(i => i == description.split(' ')[0]);\n  const containsBadge = description && badge && description.startsWith(badge);\n  const badgeLine = containsBadge ? description.split('\\n')[0] : null;\n  const badgeColor =\n    badge &&\n    colors &&\n    colors.annotations &&\n    colors.annotations[badge.replace('@', '')];\n  const badgeDescription =\n    containsBadge && badgeLine\n      ? badgeLine.replace(badge || '', '').trim()\n      : null;\n\n  return (\n    <PropInfo>\n      <PropLabelWrapper>\n        <PropLabel name={name} href={`#${name}`}>\n          <code>{name}</code>\n          {isRequired ? ' (required)' : ''}\n        </PropLabel>\n        {badge && <Badge color={badgeColor}>{badgeDescription}</Badge>}\n      </PropLabelWrapper>\n      {typeName && typeName !== 'unknown' ? (\n        <PropItem>\n          <span>Type: </span>\n          <code>{typeName}</code>\n        </PropItem>\n      ) : null}\n      {defaultValue ? (\n        <PropItem>\n          <span>Default value: </span>\n          <code>{defaultValue.value}</code>\n        </PropItem>\n      ) : null}\n      {description ? (\n        <PropItem\n          as={MarkdownContent}\n          source={description\n            .replace(/^@optional/, '')\n            .replace(badgeLine || '', '')\n            .trim()}\n        />\n      ) : null}\n    </PropInfo>\n  );\n};\n\nconst MethodDoc = ({ name, description, type, params, returns }) => {\n  const typeName = type ? getTypeName(type) : null;\n\n  return (\n    <PropInfo key={name}>\n      <PropLabel name={name} href={`#${name}`}>\n        <code>{name}</code>\n      </PropLabel>\n\n      {typeName && typeName !== 'unknown' ? (\n        <PropItem>\n          <span>Type: </span>\n          <code>{typeName}</code>\n        </PropItem>\n      ) : null}\n      {params.length ? (\n        <PropItem>\n          <span>Params: </span>\n          <code>\n            {params\n              .map(p => `${p.name}${p.type ? `: ${getTypeName(p.type)}` : ''}`)\n              .join(', ')}\n          </code>\n        </PropItem>\n      ) : null}\n      {returns && returns.type ? (\n        <PropItem>\n          <span>Returns: </span>\n          <code>{getTypeName(returns.type)}</code>\n        </PropItem>\n      ) : null}\n      {description ? (\n        <PropItem as={MarkdownContent} source={description.trim()} />\n      ) : null}\n    </PropInfo>\n  );\n};\n\nconst PropertyDoc = ({ name, description, type, value, link }: *) => {\n  const typeName = type ? getTypeName(type) : null;\n\n  return (\n    <PropInfo>\n      <PropLabel\n        name={name}\n        href={`${typeName === 'static' && link ? `${link}` : `#${name}`}`}\n      >\n        <code>{name}</code>\n      </PropLabel>\n      {typeName && typeName !== 'unknown' ? (\n        <PropItem>\n          <span>Type: </span>\n          <code>{typeName}</code>\n        </PropItem>\n      ) : null}\n      {typeof value === 'string' || typeof value === 'number' ? (\n        <PropItem>\n          <span>Value: </span>\n          <code>{value}</code>\n        </PropItem>\n      ) : null}\n      {description ? (\n        <PropItem\n          as={MarkdownContent}\n          source={description.replace(/^@optional/, '').trim()}\n        />\n      ) : null}\n    </PropInfo>\n  );\n};\n\nexport default function Documentation({\n  name,\n  info,\n  logo,\n  github,\n  filepath,\n  colors,\n}: Props) {\n  const restProps = [];\n  const description = info.description\n    .split('\\n')\n    .filter(line => {\n      if (line.startsWith(ANNOTATION_EXTENDS)) {\n        const parts = line.split(' ').slice(1);\n        const link = parts.pop();\n        restProps.push({\n          name: parts.join(' '),\n          link,\n        });\n        return false;\n      }\n      return true;\n    })\n    .join('\\n');\n\n  const props = info.props || {};\n\n  const keys = Object.keys(props).filter(\n    prop => !hasAnnotation(props[prop], ANNOTATION_INTERNAL)\n  );\n  const methods = info.methods.filter(\n    method =>\n      !(\n        method.name.startsWith('_') ||\n        method.modifiers.includes('static') ||\n        method.docblock == null ||\n        hasAnnotation(method, ANNOTATION_INTERNAL)\n      )\n  );\n  const statics = info.statics\n    .map(prop => ({\n      type: 'property',\n      info: prop,\n    }))\n    .concat(\n      info.methods\n        .filter(\n          method =>\n            method.modifiers.includes('static') &&\n            method.docblock != null &&\n            !REACT_STATIC_METHODS.includes(method.name)\n        )\n        .map(method => ({\n          type: 'method',\n          info: {\n            ...method,\n            type: { raw: 'Function' },\n          },\n        }))\n    )\n    .filter(\n      item =>\n        !(\n          item.info.name.startsWith('_') ||\n          hasAnnotation(item.info, ANNOTATION_INTERNAL)\n        )\n    );\n\n  return (\n    <Content logo={logo}>\n      <Title>{name}</Title>\n      <MarkdownContent source={description} options={{ linkify: true }} />\n      {keys.length || restProps.length ? (\n        <React.Fragment>\n          <h2>Props</h2>\n          {keys.map(prop => (\n            <PropTypeDoc\n              key={prop}\n              name={prop}\n              colors={colors}\n              {...props[prop]}\n            />\n          ))}\n          {restProps.map(prop => (\n            <RestPropsLabel key={prop.name} href={prop.link}>\n              <code>\n                ...\n                {prop.name}\n              </code>\n            </RestPropsLabel>\n          ))}\n        </React.Fragment>\n      ) : null}\n      {methods.length ? (\n        <React.Fragment>\n          <h2>Methods</h2>\n          <p>\n            These methods can be accessed on the <code>ref</code> of the\n            component, e.g.{' '}\n            <code>\n              {pascalToCamelCase(name)}\n              Ref.\n              {methods[0].name}\n              (...args)\n            </code>\n            .\n          </p>\n          {methods.map(method => (\n            <MethodDoc key={method.name} type={null} {...method} />\n          ))}\n        </React.Fragment>\n      ) : null}\n      {statics.length ? (\n        <React.Fragment>\n          <h2>Static properties</h2>\n          <p>\n            These properties can be accessed on <code>{name}</code> by using the\n            dot notation, e.g.{' '}\n            <code>\n              {name}.{statics[0].info.name}\n            </code>\n            .\n          </p>\n          {statics.map(s => {\n            if (s.type === 'method') {\n              return <MethodDoc key={s.info.name} {...s.info} />;\n            }\n\n            return <PropertyDoc key={s.info.name} {...s.info} />;\n          })}\n        </React.Fragment>\n      ) : null}\n      <EditButton github={github} filepath={filepath} />\n    </Content>\n  );\n}\n"],"file":"Documentation.js"}
\ No newline at end of file
diff --git a/node_modules/component-docs/dist/types.js.map b/node_modules/component-docs/dist/types.js.map
index 193a23b..777bf01 100644
--- a/node_modules/component-docs/dist/types.js.map
+++ b/node_modules/component-docs/dist/types.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../src/types.js"],"names":[],"mappings":";;AAEA","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\n\nexport type Page = {\n  type: 'md' | 'mdx' | 'component' | 'custom',\n  file: string,\n  group?: ?string,\n};\n\nexport type Separator = { type: 'separator' };\n\nexport type Options = {\n  root?: string,\n  logo?: string,\n  assets?: string[] | void,\n  styles?: string[] | void,\n  scripts?: string[] | void,\n  pages: Array<Page | Separator> | (() => Array<Page | Separator>),\n  output?: string,\n  port?: number,\n  open?: boolean,\n  github?: string,\n  colors?: {\n    primary?: string,\n  },\n  title?: string,\n  favicon?: string,\n};\n\nexport type PageInfo = {\n  title: string,\n  description: string,\n  link: string,\n  filepath: string,\n  dependencies: string[],\n  group?: ?string,\n};\n\nexport type TypeAnnotation = {\n  name?: string,\n  raw: string,\n};\n\nexport type Docs = {\n  description: string,\n  props: ?{\n    [prop: string]: {|\n      description: string,\n      required?: boolean,\n      defaultValue?: {\n        value: string | number,\n      },\n      flowType?: TypeAnnotation,\n      tsType?: TypeAnnotation,\n      type?: TypeAnnotation,\n    |},\n  },\n  methods: Array<{|\n    name: string,\n    description?: string,\n    docblock?: string,\n    params: Array<{\n      name: string,\n      type?: TypeAnnotation,\n    }>,\n    returns: ?{\n      type?: TypeAnnotation,\n    },\n    modifiers: Array<'static' | 'generator' | 'async'>,\n  |}>,\n  statics: Array<{|\n    name: string,\n    description?: string,\n    type?: TypeAnnotation,\n    value?: string,\n    link?: ?string,\n  |}>,\n};\n\nexport type Metadata =\n  | (PageInfo & { type: 'component', data: Docs })\n  | (PageInfo & { type: 'md', data: string })\n  | (PageInfo & {\n      type: 'mdx',\n      data: React.ComponentType<{}>,\n      stringify: () => string,\n    })\n  | (PageInfo & {\n      type: 'custom',\n      data: React.ComponentType<{}>,\n      stringify: () => string,\n    });\n\nexport type Route = PageInfo & {\n  render: (props: mixed) => React.Element<any>,\n  props?: {},\n};\n"],"file":"types.js"}
\ No newline at end of file
+{"version":3,"sources":["../src/types.js"],"names":[],"mappings":";;AAEA","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\n\nexport type Page = {\n  type: 'md' | 'mdx' | 'component' | 'custom',\n  file: string,\n  group?: ?string,\n};\n\nexport type Separator = { type: 'separator' };\n\nexport type Options = {\n  root?: string,\n  logo?: string,\n  assets?: string[] | void,\n  styles?: string[] | void,\n  scripts?: string[] | void,\n  pages: Array<Page | Separator> | (() => Array<Page | Separator>),\n  output?: string,\n  port?: number,\n  open?: boolean,\n  github?: string,\n  colors?: {\n    primary?: string,\n    annotations?: { [key: string]: string },\n  },\n  title?: string,\n  favicon?: string,\n};\n\nexport type PageInfo = {\n  title: string,\n  description: string,\n  link: string,\n  filepath: string,\n  dependencies: string[],\n  group?: ?string,\n};\n\nexport type TypeAnnotation = {\n  name?: string,\n  raw: string,\n};\n\nexport type Docs = {\n  description: string,\n  props: ?{\n    [prop: string]: {|\n      description: string,\n      required?: boolean,\n      defaultValue?: {\n        value: string | number,\n      },\n      flowType?: TypeAnnotation,\n      tsType?: TypeAnnotation,\n      type?: TypeAnnotation,\n    |},\n  },\n  methods: Array<{|\n    name: string,\n    description?: string,\n    docblock?: string,\n    params: Array<{\n      name: string,\n      type?: TypeAnnotation,\n    }>,\n    returns: ?{\n      type?: TypeAnnotation,\n    },\n    modifiers: Array<'static' | 'generator' | 'async'>,\n  |}>,\n  statics: Array<{|\n    name: string,\n    description?: string,\n    type?: TypeAnnotation,\n    value?: string,\n    link?: ?string,\n  |}>,\n};\n\nexport type Metadata =\n  | (PageInfo & { type: 'component', data: Docs })\n  | (PageInfo & { type: 'md', data: string })\n  | (PageInfo & {\n      type: 'mdx',\n      data: React.ComponentType<{}>,\n      stringify: () => string,\n    })\n  | (PageInfo & {\n      type: 'custom',\n      data: React.ComponentType<{}>,\n      stringify: () => string,\n    });\n\nexport type Route = PageInfo & {\n  render: (props: mixed) => React.Element<any>,\n  props?: {},\n};\n"],"file":"types.js"}
\ No newline at end of file
diff --git a/node_modules/component-docs/dist/utils/buildHTML.js b/node_modules/component-docs/dist/utils/buildHTML.js
index 18cacc1..02d070e 100644
--- a/node_modules/component-docs/dist/utils/buildHTML.js
+++ b/node_modules/component-docs/dist/utils/buildHTML.js
@@ -36,7 +36,8 @@ function buildHTML({
     data: data,
     github: github,
     title: title,
-    favicon: favicon
+    favicon: favicon,
+    colors: colors
   }));
 
   let body = `
diff --git a/node_modules/component-docs/dist/utils/buildHTML.js.map b/node_modules/component-docs/dist/utils/buildHTML.js.map
index 87b77b3..6a19d12 100644
--- a/node_modules/component-docs/dist/utils/buildHTML.js.map
+++ b/node_modules/component-docs/dist/utils/buildHTML.js.map
@@ -1 +1 @@
-{"version":3,"sources":["../../src/utils/buildHTML.js"],"names":["buildHTML","data","info","github","logo","sheets","scripts","colors","title","favicon","html","ReactDOMServer","renderToString","link","body","primary","forEach","s","pageTitle","undefined","replace","renderToStaticMarkup","description","split"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AACA;;;;;;;;AAiBe,SAASA,SAAT,CAAmB;AAChCC,EAAAA,IADgC;AAEhCC,EAAAA,IAFgC;AAGhCC,EAAAA,MAHgC;AAIhCC,EAAAA,IAJgC;AAKhCC,EAAAA,MALgC;AAMhCC,EAAAA,OANgC;AAOhCC,EAAAA,MAAM,GAAG,EAPuB;AAQhCC,EAAAA,KARgC;AAShCC,EAAAA;AATgC,CAAnB,EAUH;AACV,QAAMC,IAAI,GAAGC,gBAAeC,cAAf,CACX,oBAAC,YAAD;AACE,IAAA,IAAI,EAAER,IADR;AAEE,IAAA,IAAI,EAAEF,IAAI,CAACW,IAFb;AAGE,IAAA,IAAI,EAAEZ,IAHR;AAIE,IAAA,MAAM,EAAEE,MAJV;AAKE,IAAA,KAAK,EAAEK,KALT;AAME,IAAA,OAAO,EAAEC;AANX,IADW,CAAb;;AAWA,MAAIK,IAAI,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;GAAZ;AA4BAA,EAAAA,IAAI,IAAK,kBAAiBJ,IAAK,QAA/B;AAEAI,EAAAA,IAAI,IAAK;;;iCAGsBP,MAAM,CAACQ,OAAP,IAAkB,SAAU;;;GAH3D;AAQAD,EAAAA,IAAI,IAAK;;mCAEwBZ,IAAI,CAACW,IAAK;;GAF3C;AAMAC,EAAAA,IAAI,IAAI,uCAAR;AAEAR,EAAAA,OAAO,CAACU,OAAR,CAAgBC,CAAC,IAAI;AACnBH,IAAAA,IAAI,IAAK,gBAAeG,CAAE,aAA1B;AACD,GAFD;AAIA,QAAMC,SAAS,GACbV,KAAK,KAAKW,SAAV,GAAsBX,KAAK,CAACY,OAAN,CAAc,YAAd,EAA4BlB,IAAI,CAACM,KAAjC,CAAtB,GAAgEN,IAAI,CAACM,KADvE;AAGA,SAAOG,gBAAeU,oBAAf,EACL;AACA,sBAAC,aAAD;AACE,IAAA,KAAK,EAAEH,SADT;AAEE,IAAA,OAAO,EAAET,OAAO,IAAI,EAFtB;AAGE,IAAA,WAAW,EAAE,CAACP,IAAI,CAACoB,WAAL,IAAoB,EAArB,EAAyBC,KAAzB,CAA+B,IAA/B,EAAqC,CAArC,CAHf;AAIE,IAAA,IAAI,EAAET,IAJR;AAKE,IAAA,MAAM,EAAET;AALV,IAFK,CAAP;AAUD","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport HTML from '../templates/HTML';\nimport App from '../templates/App';\nimport type { Metadata, PageInfo, Separator } from '../types';\n\ntype Options = {\n  data: Array<Metadata | Separator>,\n  info: PageInfo,\n  github?: string,\n  logo?: string,\n  sheets: string[],\n  scripts: string[],\n  colors?: {\n    primary?: string,\n  },\n  title?: string,\n  favicon?: string,\n};\n\nexport default function buildHTML({\n  data,\n  info,\n  github,\n  logo,\n  sheets,\n  scripts,\n  colors = {},\n  title,\n  favicon,\n}: Options) {\n  const html = ReactDOMServer.renderToString(\n    <App\n      logo={logo}\n      path={info.link}\n      data={data}\n      github={github}\n      title={title}\n      favicon={favicon}\n    />\n  );\n\n  let body = `\n    <script>\n      var theme;\n\n      try {\n        // Check if there is a preference saved\n        theme = localStorage.getItem('preference-theme');\n      } catch (e) {\n        // Ignore\n      }\n\n      if (theme === undefined) {\n        try {\n          // If no preferred theme is set, read OS preference\n          theme = window.matchMedia('(prefers-color-scheme: dark)').matches\n            ? 'dark'\n            : 'light';\n        } catch (e) {\n          // Ignore\n        }\n      }\n\n      if (theme === 'dark') {\n        document.body.classList.add('dark-theme');\n      }\n    </script>\n  `;\n\n  body += `<div id='root'>${html}</div>`;\n\n  body += `\n    <style type=\"text/css\">\n      :root {\n        --theme-primary-color: ${colors.primary || '#397AF9'};\n      }\n    </style>\n  `;\n\n  body += `\n    <script>\n      window.__INITIAL_PATH__ = '${info.link}';\n    </script>\n  `;\n\n  body += '<script src=\"app.bundle.js\"></script>';\n\n  scripts.forEach(s => {\n    body += `<script src=\"${s}\"></script>`;\n  });\n\n  const pageTitle =\n    title !== undefined ? title.replace(/\\[title\\]/g, info.title) : info.title;\n\n  return ReactDOMServer.renderToStaticMarkup(\n    // eslint-disable-next-line react/jsx-pascal-case\n    <HTML\n      title={pageTitle}\n      favicon={favicon || ''}\n      description={(info.description || '').split('\\n')[0]}\n      body={body}\n      sheets={sheets}\n    />\n  );\n}\n"],"file":"buildHTML.js"}
\ No newline at end of file
+{"version":3,"sources":["../../src/utils/buildHTML.js"],"names":["buildHTML","data","info","github","logo","sheets","scripts","colors","title","favicon","html","ReactDOMServer","renderToString","link","body","primary","forEach","s","pageTitle","undefined","replace","renderToStaticMarkup","description","split"],"mappings":";;;;;;;AAEA;;AACA;;AACA;;AACA;;;;;;;;AAkBe,SAASA,SAAT,CAAmB;AAChCC,EAAAA,IADgC;AAEhCC,EAAAA,IAFgC;AAGhCC,EAAAA,MAHgC;AAIhCC,EAAAA,IAJgC;AAKhCC,EAAAA,MALgC;AAMhCC,EAAAA,OANgC;AAOhCC,EAAAA,MAAM,GAAG,EAPuB;AAQhCC,EAAAA,KARgC;AAShCC,EAAAA;AATgC,CAAnB,EAUH;AACV,QAAMC,IAAI,GAAGC,gBAAeC,cAAf,CACX,oBAAC,YAAD;AACE,IAAA,IAAI,EAAER,IADR;AAEE,IAAA,IAAI,EAAEF,IAAI,CAACW,IAFb;AAGE,IAAA,IAAI,EAAEZ,IAHR;AAIE,IAAA,MAAM,EAAEE,MAJV;AAKE,IAAA,KAAK,EAAEK,KALT;AAME,IAAA,OAAO,EAAEC,OANX;AAOE,IAAA,MAAM,EAAEF;AAPV,IADW,CAAb;;AAYA,MAAIO,IAAI,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;GAAZ;AA4BAA,EAAAA,IAAI,IAAK,kBAAiBJ,IAAK,QAA/B;AAEAI,EAAAA,IAAI,IAAK;;;iCAGsBP,MAAM,CAACQ,OAAP,IAAkB,SAAU;;;GAH3D;AAQAD,EAAAA,IAAI,IAAK;;mCAEwBZ,IAAI,CAACW,IAAK;;GAF3C;AAMAC,EAAAA,IAAI,IAAI,uCAAR;AAEAR,EAAAA,OAAO,CAACU,OAAR,CAAgBC,CAAC,IAAI;AACnBH,IAAAA,IAAI,IAAK,gBAAeG,CAAE,aAA1B;AACD,GAFD;AAIA,QAAMC,SAAS,GACbV,KAAK,KAAKW,SAAV,GAAsBX,KAAK,CAACY,OAAN,CAAc,YAAd,EAA4BlB,IAAI,CAACM,KAAjC,CAAtB,GAAgEN,IAAI,CAACM,KADvE;AAGA,SAAOG,gBAAeU,oBAAf,EACL;AACA,sBAAC,aAAD;AACE,IAAA,KAAK,EAAEH,SADT;AAEE,IAAA,OAAO,EAAET,OAAO,IAAI,EAFtB;AAGE,IAAA,WAAW,EAAE,CAACP,IAAI,CAACoB,WAAL,IAAoB,EAArB,EAAyBC,KAAzB,CAA+B,IAA/B,EAAqC,CAArC,CAHf;AAIE,IAAA,IAAI,EAAET,IAJR;AAKE,IAAA,MAAM,EAAET;AALV,IAFK,CAAP;AAUD","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport HTML from '../templates/HTML';\nimport App from '../templates/App';\nimport type { Metadata, PageInfo, Separator } from '../types';\n\ntype Options = {\n  data: Array<Metadata | Separator>,\n  info: PageInfo,\n  github?: string,\n  logo?: string,\n  sheets: string[],\n  scripts: string[],\n  colors?: {\n    primary?: string,\n    annotations?: { [key: string]: string },\n  },\n  title?: string,\n  favicon?: string,\n};\n\nexport default function buildHTML({\n  data,\n  info,\n  github,\n  logo,\n  sheets,\n  scripts,\n  colors = {},\n  title,\n  favicon,\n}: Options) {\n  const html = ReactDOMServer.renderToString(\n    <App\n      logo={logo}\n      path={info.link}\n      data={data}\n      github={github}\n      title={title}\n      favicon={favicon}\n      colors={colors}\n    />\n  );\n\n  let body = `\n    <script>\n      var theme;\n\n      try {\n        // Check if there is a preference saved\n        theme = localStorage.getItem('preference-theme');\n      } catch (e) {\n        // Ignore\n      }\n\n      if (theme === undefined) {\n        try {\n          // If no preferred theme is set, read OS preference\n          theme = window.matchMedia('(prefers-color-scheme: dark)').matches\n            ? 'dark'\n            : 'light';\n        } catch (e) {\n          // Ignore\n        }\n      }\n\n      if (theme === 'dark') {\n        document.body.classList.add('dark-theme');\n      }\n    </script>\n  `;\n\n  body += `<div id='root'>${html}</div>`;\n\n  body += `\n    <style type=\"text/css\">\n      :root {\n        --theme-primary-color: ${colors.primary || '#397AF9'};\n      }\n    </style>\n  `;\n\n  body += `\n    <script>\n      window.__INITIAL_PATH__ = '${info.link}';\n    </script>\n  `;\n\n  body += '<script src=\"app.bundle.js\"></script>';\n\n  scripts.forEach(s => {\n    body += `<script src=\"${s}\"></script>`;\n  });\n\n  const pageTitle =\n    title !== undefined ? title.replace(/\\[title\\]/g, info.title) : info.title;\n\n  return ReactDOMServer.renderToStaticMarkup(\n    // eslint-disable-next-line react/jsx-pascal-case\n    <HTML\n      title={pageTitle}\n      favicon={favicon || ''}\n      description={(info.description || '').split('\\n')[0]}\n      body={body}\n      sheets={sheets}\n    />\n  );\n}\n"],"file":"buildHTML.js"}
\ No newline at end of file
